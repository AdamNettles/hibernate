plugins {
  id 'org.hidetake.ssh' version '1.2.0'
}
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'maven'

group = 'adamnettles'
version = '0.0.1-SNAPSHOT'

description = """hibernate Maven Webapp"""

sourceCompatibility = 1.8
targetCompatibility = 1.8



repositories {
        
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'junit', name: 'junit', version:'4.12'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'
    compile group: 'org.hibernate', name: 'hibernate-core', version:'5.1.0.Final'
    compile group: 'javax.ejb', name: 'javax.ejb-api', version:'3.2'
    compile group: 'javax.ejb', name: 'ejb-api', version:'3.0'
    compile group: 'commons-logging', name: 'commons-logging', version:'1.1.1'
    compile group: 'org.postgresql', name: 'postgresql', version:'9.4-1200-jdbc41'
}

remotes {
  webServer {
    host = '127.0.0.1'
    port = 2222
    user = 'deployer_usr'
    identity = file('/Users/AdamNettles/.ssh/deployer_usr') //tomcat group member with webapps access
    knownHosts = allowAnyHosts //this is needed for mac for some reason... not secure.
  }
}

def appName = 'hibernate-0.0.1-SNAPSHOT'
def srcWar = "/Users/adamnettles/Documents/SANDBOX_WORKSPACE/hibernate/build/libs/${appName}.war"
def literalSrcWar = '/Users/adamnettles/Documents/SANDBOX_WORKSPACE/hibernate/build/libs/hibernate-0.0.1-SNAPSHOT.war'
def webappsDir = '/opt/tomcat/webapps'
def literaloldWebapp = 'opt/tomcat/webapps/hibernate-0.0.1-SNAPSHOT'
def oldWebapp = "${webappsDir}/${appName}"

task deploy << {
	println srcWar
	println oldWebapp
  ssh.run {
    session(remotes.webServer) {
      println 'stopping tomcat'
      execute 'sudo /bin/systemctl stop tomcat.service'
      println 'removing old webapp'
      //execute 'sudo rm -r -f /opt/tomcat/webapps/hibernate-0.0.1-SNAPSHOT'
      execute "sudo rm -r -f ${oldWebapp}"
      //execute 'sudo rm -r -f /opt/tomcat/webapps/hibernate-0.0.1-SNAPSHOT.war'
      execute "sudo rm -r -f ${oldWebapp}.war"
      println 'deploying new webapp'
      put from: literalSrcWar, into: webappsDir
      println 'starting tomcat'
      execute 'sudo /bin/systemctl start tomcat.service'
    }
  }
}